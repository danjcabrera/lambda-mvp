AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda with EventBridge trigger, X-Ray, CloudWatch, DynamoDB and SNS

Resources:
  # DynamoDB Table for Alerts
  AlertsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: lambda-demo-alerts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: alertId
          AttributeType: S
      KeySchema:
        - AttributeName: alertId
          KeyType: HASH

  # SNS Topic for Notifications
  AlertNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: lambda-demo-alerts

  # Lambda Function
  AlertProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 30
      MemorySize: 128
      Tracing: Active  # Enable X-Ray tracing
      Environment:
        Variables:
          ALERTS_TABLE: !Ref AlertsTable
          SNS_TOPIC_ARN: !Ref AlertNotificationTopic
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref AlertsTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt AlertNotificationTopic.TopicName
      Events:
        ScheduledTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Input: '{"source": "scheduler", "detail-type": "Scheduled Event", "detail": {"reason": "Regular check"}}'

  # EventBridge Rule for Custom Events
  CustomEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: lambda-demo-custom-events
      Description: "Rule to capture custom events for Lambda demo"
      EventPattern:
        source:
          - "demo.custom"
      State: ENABLED
      Targets:
        - Arn: !GetAtt AlertProcessorFunction.Arn
          Id: "ProcessCustomEvents"

  # Permission for EventBridge to invoke Lambda
  CustomEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AlertProcessorFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CustomEventRule.Arn

Outputs:
  AlertProcessorFunction:
    Description: "Alert Processor Lambda Function ARN"
    Value: !GetAtt AlertProcessorFunction.Arn
  AlertsTableName:
    Description: "DynamoDB Table for Alerts"
    Value: !Ref AlertsTable
  SNSTopicARN:
    Description: "SNS Topic ARN for Notifications"
    Value: !Ref AlertNotificationTopic
